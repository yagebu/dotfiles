#!/usr/bin/env python3
"""Backup helpers."""
import datetime
import subprocess
from pathlib import Path
from typing import List

import click


TODAY = str(datetime.date.today())


@click.group()
def cli():
    """Backup helpers."""


def run(cmd: List[str]) -> None:
    """Run the given command in the home directory."""
    print(f"Running: {cmd}")
    subprocess.run(cmd, cwd=Path.home(), check=True)


def create(args: List[str]) -> None:
    """Create a borg backup."""
    run(["borg", "create", "-p"] + args)


@cli.command()
def prune():
    """Prune old backups.

    For the main document backups, keep 60 daily ones and unlimited weekly
    ones.
    """
    # The prefix ensures that only the usual daily backups are pruned.
    click.secho("Pruning js-arch", fg="green")
    run(
        [
            "borg",
            "prune",
            "-v",
            "--list",
            "--prefix",
            "20",
            "-d60",  # 60 daily backups
            "-w-1",  # unlimited weekly backups.
            "atom:backup/js-arch",
        ]
    )


@cli.command()
@click.argument("repos", nargs=-1)
def check(repos):
    """Check backups."""
    if not repos:
        repos = ["js-arch", "js-mba", "pictures", "raw"]

    for repo in repos:
        click.secho(f"Checking {repo}", fg="green")
        run(["borg", "check", "-v", f"atom:backup/{repo}"])


@cli.command()
def pictures():
    """Backup pictures."""
    create([f"atom:backup/pictures::{TODAY}", "Pictures"])


@cli.command()
def raw():
    """Backup RAW photos."""
    create([f"atom:backup/raw::{TODAY}", "var/RAW", "var/panoramas"])


def rsync(source: str, dest: str) -> None:
    """Helper to run rsync command."""
    run(["rsync", "-a", "--inplace", "--progress", "--delete", source, dest])


@cli.command()
def store():
    """Save Backup and Music to external harddrive."""
    drive = "/run/media/jakob/Quickstore"
    rsync("atom:Music/FLAC/", f"{drive}/Music")
    rsync("atom:backup/", f"{drive}/backup")


@cli.command()
def music():
    """Download music collection."""
    rsync("atom:Music/OPUS/", "Music")


if __name__ == "__main__":
    cli()
