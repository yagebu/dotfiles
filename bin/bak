#!/usr/bin/env python3

import datetime
from pathlib import Path
import subprocess

import click


TODAY = str(datetime.date.today())


@click.group()
def cli():
    pass


def run(cmd):
    """Run the given command in the home directory."""
    subprocess.run(cmd, shell=True, cwd=Path.home())


@cli.command()
def prune():
    """Prune old backups.

    For the main document backups, keep 60 daily ones and unlimited weekly
    ones. Keep 2 VM backups.
    """

    click.secho('Pruning VMs', fg='green')
    run('borg prune -v --list --prefix 20 -H2 ks:backup/vm')

    # The prefix ensures that only the usual daily backups are pruned.
    click.secho('Pruning js-arch', fg='green')
    run('borg prune -v --list --prefix 20 -d60 -w-1 ks:backup/js-arch')
    click.secho('Pruning js-mba', fg='green')
    run('borg prune -v --list --prefix 20 -d60 -w-1 ks:backup/js-mba')


@cli.command()
def check():
    """Check backups."""

    for repo in ['js-arch', 'js-mba', 'vm', 'pictures', 'raw']:
        click.secho(f'Checking {repo}', fg='green')
        run(f'borg check -v ks:backup/{repo}')


@cli.command()
def pictures():
    """Backup pictures."""
    name = TODAY
    run(f'borg create -vp "ks:backup/pictures::{name}" Pictures')


@cli.command()
def raw():
    """Backup RAW photos."""
    name = TODAY
    run(f'borg create -vp "ks:backup/raw::{name}" var/RAW var/panoramas')


@cli.command()
def vms():
    """Backup VMs."""
    name = TODAY
    run(f'borg create -vp "ks:backup/vm::{name}" -C zlib var/VMs')


if __name__ == '__main__':
    cli()
